geom_point(alpha = 0.1)
ggplot(AREN, aes(x = id, y = names(AREN)[2])) +
geom_point(alpha = 0.1) +
geom_line()
ggplot(AREN[1:100,], aes(x = id, y = names(AREN)[2])) +
geom_point(alpha = 0.1) +
geom_line()
ggplot(AREN[1:100,], aes(x = id, y = ARENofB)) +
geom_point(alpha = 0.1) +
geom_line()
data <-
read.csv("data/filledDatabaseNUMONLY_051820.csv") %>%
clean_data() %>%
filter(GroupCat %in% c(2,3,4,5,6))
AREN <- data[, names(data) %>% str_detect("AREN")] %>% rownames_to_column('id')
PEN <- data[, names(data) %>% str_detect("Pauling")] %>% rownames_to_column('id')
ggplot(AREN[1:100,], aes(x = id, y = ARENofB)) +
geom_point(alpha = 0.1) +
geom_line()
ggplot(PEN[1:100,], aes(x = id, y = PaulingENofB)) +
geom_point(alpha = 0.1) +
geom_line()
library(tidyverse)
library(magrittr)
library(ggsci)
library(kableExtra)
library(plotly)
library(glmnet)
library(caret)
library(gbm)
source("scripts/functions.R")
data <-
read.csv("data/filledDatabaseNUMONLY_051820.csv") %>%
clean_data() %>%
filter(GroupCat %in% c(2,3,4,5,6)) %>%
mutate(GroupCat ,
GroupCat = recode(GroupCat,
"2" = "LiNb03",
"4" = "NCOT",
"3" = "Cubic",
"5" = "Tilted",
"6" = "Hexagonal"),
GroupCat = factor(GroupCat,
levels = c("Cubic",
"Tilted",
"Hexagonal",
"LiNb03",
"NCOT")))
table(data$X) %>% sort(decreasing = TRUE)
subset <- data %>% filter(X == "O")
table(subset$GroupCat) %>% sort(decreasing = TRUE)
X <- subset[,-c(1:4)] %>%
remove_identical_cal() %>%
as.matrix()
Y <- subset$GroupCat %>%
droplevels() %>%
as.matrix()
subset <- data %>% filter(X == "O") %>% mutate(ToleranceBVP2 = ToleranceBVP + 1)
table(subset$GroupCat) %>% sort(decreasing = TRUE)
X <- subset[,-c(1:4)] %>%
remove_identical_cal() %>%
as.matrix()
Y <- subset$GroupCat %>%
droplevels() %>%
as.matrix()
pca <- prcomp(X, scale = TRUE)
summary(pca)
X_PC <- pca$x[,1:17] %>% as.matrix()
PC_point <- data.frame(Compound = subset$Compound,
Cluster = as.character(subset$GroupCat),
X_PC)
PC <- pca$rotation %>%
as.data.frame() %>%
select(PC1,PC2,PC3) %>%
rownames_to_column("variable") %>%
mutate(tag = "end",
contribution = PC1^2 + PC2^2 + PC3^2)
PC[,2:4] <- PC[,2:4]*30
PC_initial <- PC %>% mutate(tag = "start")
PC_initial[,2:4] = 0
bind_rows(PC, PC_initial) %>%
group_by(variable) %>%
plot_ly() %>%
add_trace(
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~contribution,
text = ~variable,
type = 'scatter3d', mode = 'lines', opacity = 1,
line = list(width = 6, reverscale = FALSE)
) %>%
add_trace(
data = PC_point,
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~Cluster,
colors = "Dark2",
text = ~Compound,
type = 'scatter3d', mode = 'markers',
opacity = 0.9)
subset2 <- data %>%
filter(X == "O") %>%
filter(GroupCat != "NCOT") %>%
droplevels()
X <- subset[,-c(1:4)] %>%
remove_identical_cal() %>%
as.matrix() %>%
select(ToleranceBVP, ToleranceBVP2)
X <- subset[,-c(1:4)] %>%
remove_identical_cal() %>%
select(ToleranceBVP, ToleranceBVP2) %>%
as.matrix()
Y <- subset$GroupCat %>%
droplevels() %>%
as.matrix()
pca <- prcomp(X, scale = TRUE)
summary(pca)
X_PC <- pca$x[,1:17] %>% as.matrix()
PC_point <- data.frame(Compound = subset$Compound,
Cluster = as.character(subset$GroupCat),
X_PC)
X <- subset[,-c(1:4)] %>%
remove_identical_cal() %>%
select(ToleranceBVP, ToleranceBVP2, PaulingENofB) %>%
as.matrix()
Y <- subset$GroupCat %>%
droplevels() %>%
as.matrix()
pca <- prcomp(X, scale = TRUE)
summary(pca)
X_PC <- pca$x[,1:17] %>% as.matrix()
PC_point <- data.frame(Compound = subset$Compound,
Cluster = as.character(subset$GroupCat),
X_PC)
X_PC <- pca$x[,1:3] %>% as.matrix()
PC_point <- data.frame(Compound = subset$Compound,
Cluster = as.character(subset$GroupCat),
X_PC)
PC <- pca$rotation %>%
as.data.frame() %>%
select(PC1,PC2,PC3) %>%
rownames_to_column("variable") %>%
mutate(tag = "end",
contribution = PC1^2 + PC2^2 + PC3^2)
PC[,2:4] <- PC[,2:4]*30
PC_initial <- PC %>% mutate(tag = "start")
PC_initial[,2:4] = 0
bind_rows(PC, PC_initial) %>%
group_by(variable) %>%
plot_ly() %>%
add_trace(
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~contribution,
text = ~variable,
type = 'scatter3d', mode = 'lines', opacity = 1,
line = list(width = 6, reverscale = FALSE)
) %>%
add_trace(
data = PC_point,
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~Cluster,
colors = "Dark2",
text = ~Compound,
type = 'scatter3d', mode = 'markers',
opacity = 0.9)
subset2 <- data %>%
filter(X == "O") %>%
filter(GroupCat != "NCOT") %>%
droplevels()
data %>% filter(X == "O") %>% dim()
subset <- data %>% filter(X == "O") %>% mutate(ToleranceBVP2 = ToleranceBVP^2 + rnorm(283, 0, 0.01))
table(subset$GroupCat) %>% sort(decreasing = TRUE)
X <- subset[,-c(1:4)] %>%
remove_identical_cal() %>%
select(ToleranceBVP, ToleranceBVP2, PaulingENofB) %>%
as.matrix()
Y <- subset$GroupCat %>%
droplevels() %>%
as.matrix()
pca <- prcomp(X, scale = TRUE)
summary(pca)
X_PC <- pca$x[,1:3] %>% as.matrix()
PC_point <- data.frame(Compound = subset$Compound,
Cluster = as.character(subset$GroupCat),
X_PC)
PC <- pca$rotation %>%
as.data.frame() %>%
select(PC1,PC2,PC3) %>%
rownames_to_column("variable") %>%
mutate(tag = "end",
contribution = PC1^2 + PC2^2 + PC3^2)
PC[,2:4] <- PC[,2:4]*30
PC_initial <- PC %>% mutate(tag = "start")
PC_initial[,2:4] = 0
bind_rows(PC, PC_initial) %>%
group_by(variable) %>%
plot_ly() %>%
add_trace(
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~contribution,
text = ~variable,
type = 'scatter3d', mode = 'lines', opacity = 1,
line = list(width = 6, reverscale = FALSE)
) %>%
add_trace(
data = PC_point,
x = ~PC1,
y = ~PC2,
z = ~PC3,
color = ~Cluster,
colors = "Dark2",
text = ~Compound,
type = 'scatter3d', mode = 'markers',
opacity = 0.9)
gbm_cv <- gbm(GroupCat~., data = subset2[,-c(1:3)],
shrinkage = 0.01, distribution = "multinomial",
cv.folds = 5, n.trees = 3000, verbose = F)
subset2 <- data %>%
filter(X == "O") %>%
filter(GroupCat != "NCOT") %>%
droplevels()
View(subset2)
subset2 <- data %>%
filter(X == "O") %>%
filter(GroupCat != "NCOT") %>%
droplevels() %>%
mutate(ToleranceBVP2 = ToleranceBVP*2 + rnorm(283, 0, 0.01))
subset2 <- data %>%
filter(X == "O") %>%
filter(GroupCat != "NCOT") %>%
droplevels() %>%
mutate(ToleranceBVP2 = ToleranceBVP*2 + rnorm(281, 0, 0.01))
X <- subset2[,-c(1:4)] %>% remove_identical_cal() %>% as.matrix()
Y <- subset2$GroupCat %>% droplevels() %>% as.matrix()
set.seed(2020)
folds <- createFolds(1:nrow(X), k = 5, list = TRUE, returnTrain = FALSE)
ridge_cv = cv.glmnet(x = X, y = Y, alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
gbm_cv <- gbm(GroupCat~., data = subset2[,-c(1:3)],
shrinkage = 0.01, distribution = "multinomial",
cv.folds = 5, n.trees = 3000, verbose = F)
best.iter = gbm.perf(gbm_cv, method="cv")
summary(gbm_cv) %>% View()
summary(gbm_cv) %>% View()
summary(gbm_cv) %>% View()
subset2 <- data %>%
filter(X == "O") %>%
filter(GroupCat != "NCOT") %>%
droplevels()
X <- subset2[,-c(1:4)] %>% remove_identical_cal() %>% as.matrix()
Y <- subset2$GroupCat %>% droplevels() %>% as.matrix()
set.seed(2020)
folds <- createFolds(1:nrow(X), k = 5, list = TRUE, returnTrain = FALSE)
gbm_cv <- gbm(GroupCat~., data = subset2[,-c(1:3)],
shrinkage = 0.01, distribution = "multinomial",
cv.folds = 5, n.trees = 3000, verbose = F)
best.iter = gbm.perf(gbm_cv, method="cv")
summary(gbm_cv) %>% View()
summary(gbm_cv) %>% View() %>% write.csv(file = "data/GBMimportance_anionO.csv")
summary(gbm_cv) %>% %>% write.csv(file = "data/GBMimportance_anionO.csv")
summary(gbm_cv)%>% write.csv(file = "data/GBMimportance_anionO.csv")
electron <- data[, names(data) %>% str_detect("AREN|Pailing")]
View(electron)
data <-
read.csv("data/filledDatabaseNUMONLY_051820.csv") %>%
clean_data() %>%
filter(GroupCat %in% c(2,3,4,5,6))
electron <- data[, names(data) %>% str_detect("AREN|Pailing")]
electron <- data[, names(data) %>% str_detect("AREN||Pailing")]
electron <- data[, names(data) %>% str_detect("[AREN|Pailing]")]
electron <- data[, names(data) %>% str_detect("AREN|Pailing")]
electron <- data[, names(data) %>% str_detect("AREN | Pailing")]
paste(c("create", "drop", "select"),collapse = '|'))
paste(c("create", "drop", "select"),collapse = '|')
electron <- data[, names(data) %>% str_detect("AREN|Pauling")]
electron <- data[, names(data) %>% str_detect("AREN|Pauling")
electron <- data[, names(data) %>% str_detect("AREN|Pauling") ]
data <-
read.csv("data/filledDatabaseNUMONLY_051820.csv") %>%
clean_data() %>%
filter(GroupCat %in% c(2,3,4,5,6))
electron <- data[, names(data) %>% str_detect("AREN|Pauling") ]
head(data)
electron <- data[, names(data) %>% str_detect("AREN|PaulingEN") ]
head(electron)
View(electron)
str_ends(names(electron), "A")
names(electron)[str_ends(names(electron), "A")]
cor(electron)
cor(electron) %>% corrplot::corrplot()
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
get_corrplot <- function(M){
corrplot(M, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
}
library(corrplot)
data <-
read.csv("data/filledDatabaseNUMONLY_051820.csv") %>%
clean_data() %>%
filter(GroupCat %in% c(2,3,4,5,6))
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
get_corrplot <- function(M){
corrplot(M, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
}
cor(electron) %>% get_corrplot()
get_corrplot <- function(M){
corrplot(M, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
}
electron <- data[, names(data) %>% str_detect("AREN|PaulingEN")]
names(electron)[str_ends(names(electron), "A")]
cor(electron) %>% get_corrplot()
corrplot(M, method="color",
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
get_corrplot <- function(M){
corrplot(M, method="color",
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
}
cor(electron) %>% get_corrplot()
electron <- data[, names(data) %>% str_detect("AREN|PaulingEN")]
names(electron)[str_ends(names(electron), "A")]
electron[str_ends(names(electron), "A")] %>% cor
electron[str_ends(names(electron), "A")] %>% cor() %>% get_corrplot()
electron[str_ends(names(electron), "Aprime")] %>% cor() %>% get_corrplot()
electron[str_ends(names(electron), "A")] %>% cor()
electron[str_ends(names(electron), "Aprime")] %>% cor()
electron[str_ends(names(electron), "Aprime")] %>% cor()
electron[str_ends(names(electron), "B")] %>% cor()
electron[str_ends(names(electron), "Bprime")] %>% cor()
electron[str_ends(names(electron), "A")] %>% cor()
electron[str_ends(names(electron), "Aprime")] %>% cor()
electron[str_ends(names(electron), "B")] %>% cor()
electron[str_ends(names(electron), "Bprime")] %>% cor()
names(data)
radius <- data[, names(data) %>%
str_detect(paste(
c("CrystalRadius",
"IonicRadii",
"ZungerRadii",
"r_XII",
"r_VI",
"r_VII"),
collapse = "|"
))]
electron[str_ends(names(electron), "A")] %>% cor()
radius[str_ends(names(electron), "A")] %>% cor()
radius[str_ends(names(electron), "A")] %>% cor() %>% get_corrplot()
radius[str_ends(names(electron), "A")] %>% cor() %>% get_corrplot()
radius[str_ends(names(electron), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(electron), "A")] %>% cor() %>% corrplot()
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot()
radius[str_ends(names(radius), "A")] %>% cor()
radius[str_ends(names(radius), "A")] %>% cor() %>%
corrplot(type="lower", method="number",order="AOE",diag=FALSE,tl.pos="n", cl.pos="n")
radius[str_ends(names(radius), "A")] %>% cor() %>%
corrplot(method = "color",order = "AOE",addCoef.col = "grey")
radius[str_ends(names(radius), "A")] %>% cor() %>%
corrplot.mixed()
radius[str_ends(names(radius), "A")] %>% corrplot.mixed(cor(.))
radius[str_ends(names(radius), "A")] %>% cor() %>%  corrplot.mixed()
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
electron <- data[, names(data) %>% str_detect("AREN|PaulingEN")]
electron[str_ends(names(electron), "A")] %>% cor()
electron[str_ends(names(electron), "Aprime")] %>% cor()
electron[str_ends(names(electron), "B")] %>% cor()
electron[str_ends(names(electron), "Bprime")] %>% cor()
radius <- data[, names(data) %>%
str_detect(paste(
c("CrystalRadius",
"IonicRadii",
"ZungerRadii",
"r_XII",
"r_VI",
"r_VII"),
collapse = "|"))]
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
subset <- data %>% filter(X == "F")
table(subset$GroupCat) %>% sort(decreasing = TRUE)
X <- subset[,-c(1:4)] %>% remove_identical_cal() %>% as.matrix()
Y <- subset$GroupCat %>% droplevels() %>% as.matrix()
subset <- data %>% filter(X == "F")
table(subset$GroupCat) %>% sort(decreasing = TRUE)
X <- subset[,-c(1:4)] %>% remove_identical_cal() %>% as.matrix()
Y <- subset$GroupCat %>% droplevels() %>% as.matrix()
data <-
read.csv("data/filledDatabaseNUMONLY_051820.csv") %>%
clean_data() %>%
filter(GroupCat %in% c(2,3,4,5,6)) %>%
mutate(GroupCat ,
GroupCat = recode(GroupCat,
"2" = "LiNb03",
"4" = "NCOT",
"3" = "Cubic",
"5" = "Tilted",
"6" = "Hexagonal"),
GroupCat = factor(GroupCat,
levels = c("Cubic",
"Tilted",
"Hexagonal",
"LiNb03",
"NCOT")))
table(data$X) %>% sort(decreasing = TRUE)
subset <- data %>% filter(X == "F")
table(subset$GroupCat) %>% sort(decreasing = TRUE)
X <- subset[,-c(1:4)] %>% remove_identical_cal() %>% as.matrix()
Y <- subset$GroupCat %>% droplevels() %>% as.matrix()
#### -------------   step 1: ridge   ------------- ####
subset2 <- data %>%
filter(X == "F") %>%
filter(!(GroupCat %in% c("LiNb03","NCOT"))) %>%
droplevels()
X <- subset2[,-c(1:4)] %>% remove_identical_cal() %>% as.matrix()
Y <- subset2$GroupCat %>% droplevels() %>% as.matrix()
set.seed(2020)
folds <- caret::createFolds(1:nrow(X), k = 5, list = TRUE, returnTrain = FALSE)
#### -------------   step 4: GBM   ------------- ####
gbm_cv <- gbm(GroupCat~., data = subset2[,-c(1:3)],
shrinkage = 0.01, distribution = "multinomial",
cv.folds = 5, n.trees = 3000, verbose = F)
best.iter = gbm.perf(gbm_cv, method="cv")
summary(gbm_cv) %>% write.csv("data/GBM Importance anion F.xlsx")
summary(gbm_cv) %>% write.csv("data/GBM Importance anion F.csv")
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
electron <- data[, names(data) %>% str_detect("AREN|PaulingEN")]
electron[str_ends(names(electron), "A")] %>% cor()
electron[str_ends(names(electron), "Aprime")] %>% cor()
electron[str_ends(names(electron), "B")] %>% cor()
electron[str_ends(names(electron), "Bprime")] %>% cor()
radius <- data[, names(data) %>%
str_detect(paste(
c("CrystalRadius",
"IonicRadii",
"ZungerRadii",
"r_XII",
"r_VI",
"r_VII"),
collapse = "|"))]
electron %>% cor()
radius[str_ends(names(radius), "A")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Aprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "B")] %>% cor() %>% corrplot.mixed()
radius[str_ends(names(radius), "Bprime")] %>% cor() %>% corrplot.mixed()
