family = "multinomial")
tb_ridge = prediction_table(alpha = 0,
lambda = ridge_cv$lambda.min)
cubic =
hexagonal =
linb =
tilted =
data.frame(Intercept = 0, t(X[1,]))
B <- 100
for (i in 1:B){
rows_to_take <- get_samples(Y)
ridge_cv = cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
tb_coef <- ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min)
cubic[i,] <- tb_coef[,2]
hexagonal[i,] <-  tb_coef[,3]
linb[i,] <-  tb_coef[,4]
tilted[i,] <-  tb_coef[,5]
}
bind_rows(
get_CIbound(cubic, "Cubic"),
get_CIbound(hexagonal, "Hexagonal"),
get_CIbound(linb, "LiNb03"),
get_CIbound(tilted, "Tilted")
) %>%
full_join(
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept"))
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept"))
bind_rows(
get_CIbound(cubic, "Cubic"),
get_CIbound(hexagonal, "Hexagonal"),
get_CIbound(linb, "LiNb03"),
get_CIbound(tilted, "Tilted")
) %>%
full_join(
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>% View()
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept"))
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>% View()
View(cubic)
group_cat = unique(Y)
unique(Y)
lapply(group_cat, function(cat_i) (1:nrow(X))[Y == cat_i] %>% resample())
lapply(group_cat, function(cat_i) (1:nrow(X))[Y == cat_i])
subset2 <- data %>%
filter(X == "O") %>%
filter(GroupCat != "NCOT") %>%
droplevels()
X <- subset2[,-c(1:4)] %>% remove_identical_cal() %>% as.matrix()
Y <- subset2$GroupCat %>% droplevels() %>% as.matrix()
set.seed(2020)
folds <- createFolds(1:nrow(X), k = 5, list = TRUE, returnTrain = FALSE)
ridge_cv = cv.glmnet(x = X, y = Y, alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
tb_ridge = prediction_table(alpha = 0, lambda = ridge_cv$lambda.min)
tb_ridge$r %>% print_accurate_tb()
tb_ridge$t[,-5] %>% highlight_tb_count()
tb_ridge$t[,-5] %>% highlight_tb_percent()
cubic =
hexagonal =
linb =
tilted =
data.frame(Intercept = 0, t(X[1,]))
B <- 100
for (i in 1:B){
rows_to_take <- get_samples(Y)
ridge_cv_B = cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
tb_coef <- ridge_cv_B %>%
get_coef(tuning_parameter = ridge_cv_B$lambda.min)
cubic[i,] <- tb_coef[,2]
hexagonal[i,] <-  tb_coef[,3]
linb[i,] <-  tb_coef[,4]
tilted[i,] <-  tb_coef[,5]
}
bind_rows(
get_CIbound(cubic, "Cubic"),
get_CIbound(hexagonal, "Hexagonal"),
get_CIbound(linb, "LiNb03"),
get_CIbound(tilted, "Tilted")
) %>%
full_join(
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept"))
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
bind_rows(
get_CIbound(cubic, "Cubic"),
get_CIbound(hexagonal, "Hexagonal"),
get_CIbound(linb, "LiNb03"),
get_CIbound(tilted, "Tilted")
) %>%
full_join(
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept"))
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
bind_rows(
get_CIbound(cubic, "Cubic"),
get_CIbound(hexagonal, "Hexagonal"),
get_CIbound(linb, "LiNb03"),
get_CIbound(tilted, "Tilted")
) %>%
full_join(
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>% View()
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept"))
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>% View()
View(cubic)
View(tb_coef)
i
tb_coef[,2]
cubic[i,] <- tb_coef[,2]
tb_coef[,2]
tb_coef[,2]
tb_coef[,2]
tb_coef[,c(1,2)]
cubic <- rbind(cubic, tb_coef[,c(1,2)])
tb_coef[,c(1,2)]
tb_coef[,c(1,2)] %>% spread(key = "feature")
tb_coef[,c(1,2)] %>% spread(key = feature)
tb_coef[,c(1,2)] %>% spread()
tb_coef[,c(1,2)] %>% spread(feature)
tb_coef[,c(1,2)] %>% spread(feature, cubic)
tb_coef
tb_coef %>% melt(id.vars = "feature")
tb_coef %>% reshape2::melt(id.vars = "feature")
tb_coef %>% reshape2::melt(id.vars = "feature", variable.name = "group_cat")
dummy_coef <- data.frame(feature = NULL,
group_cat = NULL,
value = NULL)
dummy_coef <- data.frame(feature = NULL, group_cat = NULL, value = NULL)
B <- 100
dummy_coef <- rbind(dummy_coef,
tb_coef %>% reshape2::melt(id.vars = "feature", variable.name = "group_cat"))
dummy_coef <- data.frame(feature = NULL, group_cat = NULL, value = NULL)
B <- 100
for (i in 1:B){
rows_to_take <- get_samples(Y)
ridge_cv_B = cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
dummy_coef <- rbind(dummy_coef,
tb_coef %>% reshape2::melt(id.vars = "feature", variable.name = "group_cat"))
}
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% View()
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% spread(feature, group_cat)
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% spread(group_cat, feature)
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% spread(group_cat, lower)
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% spread(group_cat)
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% spread(group_cat, c(upper, lower))
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>%
dcast(formula = feature ~ group_cat, fun.aggregate = sum, value.var = "value")
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>%
reshape2::dcast(formula = feature ~ group_cat, fun.aggregate = sum, value.var = "value")
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>%
reshape2::dcast(formula = c(feature, lower, upper) ~ group_cat, fun.aggregate = sum, value.var = "value")
#### plot CI
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>%
reshape2::dcast(formula = c(feature, lower, upper) ~ group_cat)
full_join(
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>% View()
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept")) %>% View()
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>% View()
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept")) %>% head()
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>% View()
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept")) %>% head()
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept")) %>% head()
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% View()
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)) %>% View()
#### plot CI
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept"))
) %>% View()
#### plot CI
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat") %>%
mutate(feature = recode(feature, "(Intercept)" = "Intercept")) %>% View()
) %>% View()
#### plot CI
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat")
) %>% View()
#### plot CI
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat")
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975))
View(dummy_coef)
rows_to_take <- get_samples(Y)
ridge_cv_B = cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
ridge_cv_B %>% get_coef()
ridge_cv_B <- cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
dummy_coef <- rbind(dummy_coef,
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", variable.name = "group_cat"))
dummy_coef <- data.frame(feature = NULL, group_cat = NULL, value = NULL)
B <- 10
for (i in 1:B){
rows_to_take <- get_samples(Y)
ridge_cv_B <- cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
dummy_coef <- rbind(dummy_coef,
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", variable.name = "group_cat"))
}
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat")
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
dummy_coef <- data.frame(feature = NULL, group_cat = NULL, value = NULL)
B <- 10
for (i in 1:B){
rows_to_take <- get_samples(Y)
ridge_cv_B <- cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
dummy_coef <- rbind(dummy_coef,
ridge_cv_B %>%
get_coef(tuning_parameter = ridge_cv_B$lambda.min) %>%
reshape2::melt(id.vars = "feature", variable.name = "group_cat"))
}
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat")
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
B <- 2000
dummy_coef <- data.frame(feature = NULL, group_cat = NULL, value = NULL)
for (i in 1:B){
rows_to_take <- get_samples(Y)
ridge_cv_B <- cv.glmnet(x = X[rows_to_take,],
y = Y[rows_to_take],
alpha = 0,
nfolds = 5,
type.measure = "deviance",
family = "multinomial")
dummy_coef <- rbind(dummy_coef,
ridge_cv_B %>%
get_coef(tuning_parameter = ridge_cv_B$lambda.min) %>%
reshape2::melt(id.vars = "feature", variable.name = "group_cat"))
}
#### plot CI
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat")
) %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
full_join(
dummy_coef %>%
group_by(feature, group_cat) %>%
summarise(lower = quantile(value, probs = 0.025),
upper = quantile(value, probs = 0.975)),
ridge_cv %>%
get_coef(tuning_parameter = ridge_cv$lambda.min) %>%
reshape2::melt(id.vars = "feature", value.name = "est", variable.name = "group_cat")
) %>%
write.csv(file = "data/CI_anionO.csv", row.names = FALSE)
read.csv("data/CI_anionO.csv") %>%
ggplot(aes(x = feature, y = est, color = group_cat)) +
geom_point(size = 1) +
geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.5, width = 0.5) +
geom_hline(yintercept = 0, size = 1, alpha = 0.7, color = "grey50") +
scale_color_nejm() +
facet_wrap(group_cat~., nrow=1) +
labs(x = "", y = "Coefficient", color = "Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
coord_flip()
